####################################################
#
#
#                 GENERAL CONFIGURATION
#
#
####################################################
# number of threads to run migration
migration.process.threads=1
# set true to migrate all versions for each document
migration.copy.all.versions.enabled=false
# to migrate only folder structure set the following property to true
migration.copy.folders.only.enabled=false
# migrate folder permissions, it's only considered when the previous property is enabled
migration.copy.permissions.enabled=false
# set to true to migrate document associations
migration.copy.associations.enabled=true
# set true to avoid re-migration of existing documents in target repository
migration.skip.existing.documents.enabled=false
# set true to avoid re-migration of existing documents in target repository
migration.replace.existing.documents.enabled=true
# namespace to prefix conversion for collection properties issue. This is a semicolon separated list, each item on the list is a comma separated pair value (ie namespace1,prefix1;namespace2,prefix2)
migration.namespace.prefix.list=
# if enabled uses custom servlet url that decrypts alfresco content instead of regular webscript to retrieve content
migration.decryption.enabled=false
# url server used to decrypt documents
migration.decryption.host.url=https://localhost:8080


#report type could be EXCEL or DATABASE or just leave it blank for no reporting output
migration.report.type=DATABASE
# archive folder location
migration.report.folder=
# migration report file name
migration.report.file=
# error report file name
migration.report.file.error=


# if true, sends emails to notify migration errors only
migration.notification.error.enabled=false
# if true, sends emails to notify migration completion
migration.notification.success.enabled=false
migration.notification.smtp.host=
migration.notification.from=
migration.notification.to=
migration.notification.subject=


source.alfresco.host.url=http://localhost:8080

source.alfresco.cmis.url=/alfresco/api/-default-/cmis/versions/1.0/atom
source.alfresco.user=admin
source.alfresco.password=admin

######################
# QUERY & PAGINATION #
######################

#source.query=SELECT * FROM cmis:document where cmis:lastModificationDate >= TIMESTAMP '2016-10-27T12:30:00.000Z'

source.location=  /Test01
source.page.size=50
source.batch.size=100

# options: KEEP, MOVE, DELETE
source.post-migration.action.success=KEEP
# only applies if action.success value is MOVE
source.post-migration.folder.success=
# options: KEEP, MOVE, DELETE
source.post-migration.action.error=KEEP
# only applies if action.error value is MOVE
source.post-migration.folder.error=


#############################
# REPOSITORY ACCESS DETAILS #
#############################

target.alfresco.host.url=http://localhost:8080
target.alfresco.cmis.url=/alfresco/api/-default-/cmis/versions/1.1/atom
target.alfresco.user=admin
target.alfresco.password=admin

#######################################
# FOLDER STRUCTURE MAIN CONFIGURATION #
#######################################

# set to true to migrate an exact copy of the source folder structure without considering any type of rule to generate the target folder structure
target.folder.structure.keep.original.enabled=true
# parent root folder where the subfolders will be created. Keep it empty to migrate an exact copy of the folder structure from source to target
target.folder.structure.root.path=/Test02

##################################
# FOLDER STRUCTURE CONFIGURATION # to use this properties set target.folder.structure.keep.original.enabled=false
##################################

# options: PROPERTY, RULE, DATE. They can be combined in a separated comma list. (ie RULE1,PROPERTY1,RULE2,DATE1) every item on the list must have the properties ending with its own ID (ie "property1" -> target.folder.structure.list.property1=stc:triStarNumber) Refer to readme.txt for more information and examples
target.folder.structure.basedOn=
# if it's not possible to determine the destination folder the document will be uploaded into the default folder (root path + default) Leave it blank if not required. Documents migrated to the default folder will be consider a migration SUCCESS. Add '/' at the beginning
target.folder.structure.default=
# This is a semicolon separated list. It replaces a string in the destination path. Example: value: "_,/;siteId,;" This will remove siteId from the path and replace '_' by '/'
target.folder.structure.string.replace=

##################################
# FOLDER STRUCTURE PROPERTIES    # to use this properties set target.folder.structure.keep.original.enabled=false
##################################

# This property is comma separated list, if the first property is null it will try to use the next one and so on. This property only applies when structure.basedOn value is PROPERTY or DATE. Refer to readme.txt for more information and examples
target.folder.structure.list.property1=
# it applies a specific format only when the property structure.property is a d:date
target.folder.structure.date.format.property1=
# number of levels created based on the property value (ie, property value="Spiderman", levels=4, folder structure created= "/S/p/i/d/"). With DATE the max number of levels is 6, from year to minute
target.folder.structure.levels.property1=
# set this property to true to add the property value used to generate the folder structure as the last folder level (ie "/S/p/i/d/Spiderman/")
target.folder.structure.includePropertyValueAsLastLevelFolder.enabled.property1=

##################################
# FOLDER STRUCTURE RULES         # to use this properties set target.folder.structure.keep.original.enabled=false
##################################

# this property is a semicolon separated list of rules. property_id,EQUAL|CONTAINS|STARTS|ENDS|REGEX,value_to_match,target_folder_path;
# ie: pr:DocumentType,CONTAINS,SE,Financial Operations/Credit/Price Protection;pr:destinationPath,ENDS,NIAs,/Participations_RPT/Parts Staff/Anna/Participations RPT/NIAs;pr:destinationPath,ENDS,Litigation,/Participations_RPT/Parts Staff/Anna/Participations RPT/Litigation;
target.folder.structure.rule1=

##################################
# TARGET DOCUMENT PROPERTIES     #
##################################

# properties that will be removed during migration. This is comma separated value property (ie {http://www.alfresco.org/model/content/1.0}type)
target.property.filter=
# change the content type in the target repository. Leave it blank if the content type is the same in the target and the source
target.new.contentType=
# (the actual target nodeID will be created automatically by Alfresco and it will be different than the source nodeID) set true the property to keep the source nodeID in a custom property in the target repository for tracking purposes
target.keep.source.nodeId.enabled=false
# custom property that will hold the source nodeID in the target repository
target.keep.source.nodeId.property=


